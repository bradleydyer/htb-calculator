"use strict";var htb=angular.module("htbApp",[]);htb.config(["$httpProvider",function(a){a.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",a.defaults.useXDomain=!0}]),htb.directive("sliderCalculator",function(){return{restrict:"C",replace:!1,templateUrl:"htb/templates/slider-calculator.html",link:function(a,b,c){var d=b.find(".slider.mortgage-monthly-repayment");b.find(".slider.mortgage-deposit").slider({value:a.deposit,min:2500,max:18e4,step:500,slide:function(b,c){a.deposit=c.value,a.$apply(),d.slider("option","max",a.maxRepayment),d.slider("option","value",a.repayment),d.slider("option","min",a.minRepayment)}}),b.find(".slider.mortgage-interest-rate").slider({value:a.interestRate,min:2,max:5,step:.01,slide:function(b,c){a.interestRate=c.value,a.$apply(),d.slider("option","max",a.maxRepayment),d.slider("option","min",a.minRepayment)}}),b.find(".slider.mortgage-length").slider({value:a.mortgageLenght,min:25,max:35,step:1,slide:function(b,c){a.mortgageLenght=c.value,a.$apply(),d.slider("option","max",a.maxRepayment),d.slider("option","min",a.minRepayment)}}),b.find(".slider.mortgage-monthly-repayment").slider({value:a.repayment,min:a.minRepayment,max:a.maxRepayment,step:1,slide:function(b,c){a.repayment=c.value,a.$apply()}}),b.find(".info-bubble").bind("click",function(){var b=jQuery("."+jQuery(this).data("info-target"));a.showInformationPanel(jQuery(this),b)}),b.find(".close-panel").bind("click",function(b){a.hideInformationPanel(jQuery(this).parent()),b.preventDefault()})}}});
'use strict';htb.controller('SliderCalculatorCtrl',function($scope){$scope.maxTotal=600000;$scope.marginalCorrection=599500;$scope.interestRate=2.5;$scope.mortgageLenght=25;$scope.repayment=0;$scope.minRepayment=0;$scope.maxRepayment=0;$scope.deposit=30000;$scope.equityLoan=0;$scope.principal=0;$scope.getDepositAsPercentage=function(){return parseFloat(($scope.deposit*100 /($scope.deposit+$scope.equityLoan+$scope.principal)).toFixed(1));}
$scope.setEquityLoan=function(deposit,principlal){if(($scope.deposit+$scope.equityLoan+$scope.principal)>$scope.maxTotal){$scope.equityLoan=$scope.maxTotal*40 / 100;}else{$scope.equityLoan=parseInt((deposit+principlal)*40 / 60);}}
$scope.getEquityLoanAsPercentage=function(){return parseFloat(($scope.equityLoan*100 /($scope.deposit+$scope.equityLoan+$scope.principal)).toFixed(1));}
$scope.setPrincipal=function(){var principal=parseInt($scope.repayment*(1-Math.pow(1+$scope.calculateMonthlyInterestRate($scope.interestRate),-$scope.calculateMortgageLenghtInMonths($scope.mortgageLenght)))/ $scope.calculateMonthlyInterestRate($scope.interestRate));if(($scope.deposit+$scope.equityLoan+principal)<=$scope.maxTotal){$scope.principal=principal;}else{$scope.principal=$scope.maxTotal-$scope.deposit-$scope.equityLoan;}}
$scope.findRepaymentForMaxPrincipal=function(){if($scope.getDepositAsPercentage()<5){return $scope.maxRepayment;}else{var maxPrincipal=$scope.maxTotal-$scope.deposit-$scope.equityLoan;var r=$scope.calculateMonthlyInterestRate($scope.interestRate)
var P=maxPrincipal;var N=$scope.calculateMortgageLenghtInMonths($scope.mortgageLenght);return parseInt((r/(1-Math.pow(1+r,-N)))*P);}}
$scope.calculateMonthlyInterestRate=function(interestRate){return interestRate / 100 / 12;}
$scope.calculateMortgageLenghtInMonths=function(mortgageLenght){return mortgageLenght*12;}
$scope.getPrincipalAsPercentage=function(){return parseFloat(($scope.principal*100 /($scope.deposit+$scope.equityLoan+$scope.principal)).toFixed(1));}
$scope.init=function(){$scope.calculateMinRepayment($scope.interestRate,$scope.deposit,$scope.mortgageLenght);$scope.calculateMaxRepayment($scope.interestRate,$scope.deposit,$scope.mortgageLenght);$scope.calculateRepayment($scope.minRepayment,$scope.maxRepayment);$scope.setPrincipal();}
$scope.calculateRepayment=function(minRepayment,maxRepayment){$scope.repayment=parseInt((minRepayment+maxRepayment)/ 2);}
$scope.calculateMaxRepayment=function(interestRate,deposit,mortgageLenght){var r=$scope.calculateMonthlyInterestRate(interestRate)
var P=$scope.maxTotal*0.55;var N=$scope.calculateMortgageLenghtInMonths(mortgageLenght);$scope.maxRepayment=parseInt((r/(1-Math.pow(1+r,-N)))*P);}
$scope.calculateMinRepayment=function(interestRate,deposit,mortgageLenght){if(deposit>($scope.maxTotal*0.225)){$scope.minRepayment=$scope.repayment;}else{var r=$scope.calculateMonthlyInterestRate(interestRate)
var P=$scope.maxTotal*0.375;var N=$scope.calculateMortgageLenghtInMonths(mortgageLenght);$scope.minRepayment=parseInt((r/(1-Math.pow(1+r,-N)))*P);}}
$scope.getTotalWithHelpToBuy=function(){return $scope.deposit+$scope.equityLoan+$scope.principal;}
$scope.getTotalWithoutHelpToBuy=function(){return $scope.deposit+$scope.principal;}
$scope.showInformationPanel=function($sourceInfoBubble,$targetPanel){var $informationContainer=jQuery('.information-container');var $htbContainer=jQuery('.htb-calc');$informationContainer.width($htbContainer.innerWidth());$informationContainer.height($htbContainer.height());$informationContainer.show();jQuery('.info-panel').hide();$targetPanel.show();}
$scope.hideInformationPanel=function(){var $informationContainer=jQuery('.information-container');$informationContainer.hide();}
$scope.init();$scope.$watch('deposit',function(newValue){$scope.setEquityLoan(newValue,$scope.principal);$scope.setPrincipal();$scope.repayment=$scope.findRepaymentForMaxPrincipal();$scope.calculateMaxRepayment($scope.interestRate,newValue,$scope.mortgageLenght);$scope.calculateMinRepayment($scope.interestRate,newValue,$scope.mortgageLenght);});$scope.$watch('interestRate',function(newValue){$scope.setPrincipal();$scope.setEquityLoan($scope.deposit,$scope.principal);$scope.calculateMaxRepayment(newValue,$scope.deposit,$scope.mortgageLenght);$scope.calculateMinRepayment(newValue,$scope.deposit,$scope.mortgageLenght);});$scope.$watch('mortgageLenght',function(newValue){$scope.setPrincipal();$scope.setEquityLoan($scope.deposit,$scope.principal);$scope.calculateMaxRepayment($scope.interestRate,$scope.deposit,newValue);$scope.calculateMinRepayment($scope.interestRate,$scope.deposit,newValue);});$scope.$watch('repayment',function(newValue){$scope.setPrincipal();});})
